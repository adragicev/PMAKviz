#pragma checksum "C:\Users\AnnieD\Desktop\KvizAD – 30-08-Final1\KvizAD – 30-08-Final1\KvizAD – 30-08-Final\KvizAD – kopija-30.8\Views\User\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0477d65dff2799117f6b4022721a30b7f831a49e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_User_Index), @"mvc.1.0.view", @"/Views/User/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\AnnieD\Desktop\KvizAD – 30-08-Final1\KvizAD – 30-08-Final1\KvizAD – 30-08-Final\KvizAD – kopija-30.8\Views\_ViewImports.cshtml"
using KvizAD;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\AnnieD\Desktop\KvizAD – 30-08-Final1\KvizAD – 30-08-Final1\KvizAD – 30-08-Final\KvizAD – kopija-30.8\Views\_ViewImports.cshtml"
using KvizAD.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0477d65dff2799117f6b4022721a30b7f831a49e", @"/Views/User/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f48f0c99b7b000ad6595372092618a36909ca4de", @"/Views/_ViewImports.cshtml")]
    public class Views_User_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\AnnieD\Desktop\KvizAD – 30-08-Final1\KvizAD – 30-08-Final1\KvizAD – 30-08-Final\KvizAD – kopija-30.8\Views\User\Index.cshtml"
  
    ViewData["Title"] = "User";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>
    body {
        color: #6B6B6B;
        color: black;
        background-color: #F2F2F2;
        word-wrap: break-word;
        font-family: 'Open Sans', sans-serif;
        line-height: 1.7;
        font-size: 14px;
    }

    .btn {
        float: right;
        margin-top: 10px;
        text-align: center;
        font-size: 13px;
        padding: 12px 20px;
        border-radius: 4px;
        background-color: #DA4453;
        color: #fff;
        -webkit-transition: background-color 0.3s linear;
        -moz-transition: background-color 0.3s linear;
        -o-transition: background-color 0.3s linear;
        transition: background-color 0.3s linear;
    }

    #div1 {
        /*opacity: 0.6;*/
        height: 352px;
        font-size: 18px;
        font-weight: 400;
        font-weight:bold;
    }

  
   
    .score {
        margin-top:10px;
        margin-left:15px;
        font-weight: bold;
        text-align: left;
        float: left;
    
    ");
            WriteLiteral(@"}
    #next {
        
        margin-right: 35px;
        margin-bottom: 20px;
        font-weight: bold;
        text-align: right;
        float: right;
    }

    div.transbox {
        margin: 40px;
        margin-bottom:6px;
        background-color: #ffffff;
        border: 1px solid black;
        opacity: 0.7;
    }
</style>
<!--<h1>Index style=""background-color:rebeccapurple;</h1>-->
<div id=""div1"" class=""site-section-cover overlay"" style=""background-image: url('https://www.irishtimes.com/polopoly_fs/1.4121626.1576850603!/image/image.jpg_gen/derivatives/box_620_330/image.jpg');"">

    <div class=""container"">
        <div class=""row align-items-center justify-content-center"">
            
            <div class=""col-lg-10 text-center"">
                
                <div class=""transbox"">

                    <label id=""score"" class=""score"">Rezultat: 0</label>

                    <br /> <br />
                    <label id=""pitanje""> </label><br />

               ");
            WriteLiteral(@"     <input type=""radio"" id=""od_1"" name=""odgovori"" value=""0"" checked /> <label id=""od_1l""></label><br />
                    <input type=""radio"" id=""od_2"" name=""odgovori"" value=""1"" /> <label id=""od_2l""></label><br />
                    <input type=""radio"" id=""od_3"" name=""odgovori"" value=""2"" /> <label id=""od_3l""></label><br />
                    <input type=""button"" onclick=""Odgovori()"" class=""btn"" id=""next"" value=""Next""><br /><br />
                </div>

             </div>
        </div>
    </div>
</div>



<script>
    var pitanja = [];
    var odgovori = [];
    var odgovor;

    function spremiPitanja(data) {
        console.log(data);
        pitanja = data;


    }
    function spremiOdg(data) {
        odgovori = data;

        setTimeout(Ucitaj, 2000);

    }
    function Ucitaj() {

        if (br == pitanja.length) {


            //window.alert(""Pobijedili ste "");
            window.location.href = ""../TheEnd/Win"";
            return;




        }
  ");
            WriteLiteral(@"      if (zivoti == 0) {
            //window.alert(""Izgubili ste"");
            window.location.href = ""../TheEnd/Defeat"";
            return;


        }

        let pitanje = pitanja[br];// trenutno pitanje
        odgovor = odgovori.filter(x => x.pitanjaId == pitanje.pitanjaId);
        if (odgovor.length === 3) {
            document.getElementById('pitanje').innerHTML = pitanje.text;

            document.getElementById('od_1l').innerHTML = odgovor[0].text;
            document.getElementById('od_2l').innerHTML = odgovor[1].text;
            document.getElementById('od_3l').innerHTML = odgovor[2].text;


        } 
        else {
            br++;
            Ucitaj();
        }

        






    }
    axios.get('/api/admin/pitanja').then(response => spremiPitanja(response.data));
    axios.get('/api/admin/odgovori').then(response => spremiOdg(response.data));

    var br = 0;
    var zivoti = 3;
    var score = 0;
    function Odgovori() {

        // provjera");
            WriteLiteral(@"vamo je li checkiran neki odgovor. Ako nije value je -1
        let value = document.getElementById('od_1').checked ? document.getElementById('od_1').value : -1;
        value = document.getElementById('od_2').checked ? document.getElementById('od_2').value : value;
        value = document.getElementById('od_3').checked ? document.getElementById('od_3').value : value;


        if (value == -1) return; //ništa ne radi

        let labela = document.getElementById('od_1l').innerHTML;
        console.log(value);

        if (value == ""2"") document.getElementById('od_2l').innerHTML;
        if (value == ""3"") document.getElementById('od_3l').innerHTML;

        console.log(""odgovor"");
        console.log(odgovor[value]);
        console.log(odgovor[value].isCorect);


        if (odgovor[value].isCorect) {
            alert(""odgovor je točan"");
            br++;
            score += 10;
            document.getElementById('score').innerHTML = ""Rezultat: "" + score;

        }
        els");
            WriteLiteral(@"e {
            zivoti -= 1;
            alert(""Odgovor je kriv"");
            br++;
            if (zivoti == 0) {
               // alert(""Game over"");


            }


        }


        Ucitaj();



    }


       // if (true) {
         //   br++;
           // score += 10;



       // }
       // else {
            //zivoti -= 1;
           // if (zivoti == 0) {

               // return;

            //}


        //}



</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
